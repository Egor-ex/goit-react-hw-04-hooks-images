{"version":3,"sources":["App.module.css","api/api.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.jsx","index.js"],"names":["module","exports","api","axios","create","baseURL","params","key","per_page","image_type","orientation","getImages","q","a","get","data","console","log","getNextPage","currentPage","Searchbar","onSubmit","useState","query","setQuery","className","type","name","autoComplete","autoFocus","placeholder","value","onChange","e","target","ImageGalleryItem","tags","webformatURL","onClick","largeImageURL","src","alt","ImageGallery","imageArr","onClickImage","map","id","Button","children","modalRoot","document","getElementById","Modal","onClose","img","useEffect","window","addEventListener","handleKeydown","removeEventListener","code","createPortal","overlay","querySelector","App","setImageArr","setCurrentPage","maxPage","setMaxPage","isLoading","setIsLoading","isShowModal","setIsShowModal","currentImage","setCurrentImage","handleSubmit","preventDefault","res","totalHits","totalImages","hits","getMaxPage","length","totalItems","itemsPerPage","Math","ceil","handleClickMore","prev","images","toggleModal","color","height","width","visible","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e956d553.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2EWoa\"};","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://pixabay.com/api/\",\r\n  params: {\r\n    key: \"23524775-df2d338982330c0756c93cc31\",\r\n    per_page: 12,\r\n    image_type: \"photo\",\r\n    orientation: \"horizontal\",\r\n  },\r\n});\r\n\r\nexport async function getImages(q) {\r\n  try {\r\n    const { data } = await api.get(`?q=${q}`);\r\n\r\n    return data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport async function getNextPage(q, currentPage) {\r\n  try {\r\n    const { data } = await api.get(`?q=${q}&page=${currentPage}`);\r\n\r\n    return data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\nexport function Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={onSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          name=\"query\"\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={query}\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};","import PropTypes from \"prop-types\";\r\n\r\nexport function ImageGalleryItem({\r\n  tags,\r\n  webformatURL,\r\n  onClick,\r\n  largeImageURL,\r\n}) {\r\n  return (\r\n    <li\r\n      className=\"ImageGalleryItem\"\r\n      onClick={() => onClick({ largeImageURL, tags })}\r\n    >\r\n      <img className=\"ImageGalleryItem-image\" src={webformatURL} alt={tags} />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  largeImageURL: PropTypes.string,\r\n  werformatURL: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};","import { ImageGalleryItem } from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function ImageGallery({ imageArr, onClickImage }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {imageArr.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          tags={tags}\r\n          onClick={onClickImage}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  imageArr: PropTypes.arrayOf(PropTypes.object),\r\n  onClickImage: PropTypes.func,\r\n};","import PropTypes from \"prop-types\";\r\n\r\nexport function Button({ children, onClick }) {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func,\r\n};","import { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.getElementById(\"modal-root\");\r\n\r\nexport default function Modal({ onClose, img }) {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeydown);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeydown);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleKeydown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleOverlayClick = (e) => {\r\n    const overlay = document.querySelector(\".Overlay\");\r\n\r\n    if (e.target === overlay) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleOverlayClick}>\r\n      <div className=\"Modal\">\r\n        <img src={img.largeImageURL} alt={img.tags} />\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  img: PropTypes.object,\r\n};","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { useState } from \"react\";\nimport { getImages, getNextPage } from \"./api/api\";\nimport \"./App.module.css\";\nimport { Searchbar } from \"./components/Searchbar/Searchbar\";\nimport { ImageGallery } from \"./components/ImageGallery/ImageGallery\";\nimport Loader from \"react-loader-spinner\";\nimport { Button } from \"./components/Button/Button\";\nimport Modal from \"./components/Modal/Modal\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [imageArr, setImageArr] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [maxPage, setMaxPage] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isShowModal, setIsShowModal] = useState(false);\n  const [currentImage, setCurrentImage] = useState({});\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setQuery(e.target.query.value);\n      setCurrentPage(1);\n      setIsLoading(true);\n\n      const res = await getImages(e.target.query.value);\n      const totalImages = await res.totalHits;\n      const imageArr = await res.hits;\n\n      setMaxPage(getMaxPage(totalImages, imageArr.length));\n      setImageArr(imageArr);\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getMaxPage = (totalItems, itemsPerPage) => {\n    return Math.ceil(totalItems / itemsPerPage);\n  };\n\n  const handleClickMore = async () => {\n    try {\n      setCurrentPage((prev) => prev + 1);\n      setIsLoading(true);\n\n      const res = await getNextPage(query, currentPage + 1);\n      const images = await res.hits;\n\n      setImageArr((prev) => [...prev, ...images]);\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const toggleModal = () => {\n    setIsShowModal(!isShowModal);\n  };\n\n  const handleClickImage = (currentImage) => {\n    setCurrentImage(currentImage);\n\n    toggleModal();\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleSubmit} />\n      <ImageGallery imageArr={imageArr} onClickImage={handleClickImage} />\n      <Loader\n        type=\"TailSpin\"\n        color=\"#3f51b5\"\n        height={100}\n        width={100}\n        visible={isLoading}\n      />\n      {/* Отображаем кнопку только если есть изображения на странице и \n            отрендеренна НЕпоследняя страница */}\n      {imageArr.length > 0 && currentPage < maxPage && (\n        <Button onClick={handleClickMore}>Load more</Button>\n      )}\n\n      {isShowModal && <Modal img={currentImage} onClose={toggleModal} />}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}